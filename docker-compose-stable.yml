version: '3.8'

services:
  # Grafana - Monitoring Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: av-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - av-network
    restart: unless-stopped

  # MLflow - ML Model Management
  mlflow:
    image: python:3.9-slim
    container_name: av-mlflow
    ports:
      - "5000:5000"
    command: >
      bash -c "pip install mlflow && 
        mlflow server --host 0.0.0.0 --port 5000"
    volumes:
      - mlflow-storage:/mlruns
    networks:
      - av-network
    restart: unless-stopped

  # Kafka - Message Broker
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: av-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - av-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: av-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - av-network

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: av-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - av-network

  # Spark Master
  spark-master:
    image: bitnami/spark:latest
    container_name: av-spark-master
    ports:
      - "8081:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - av-network

  # HDFS NameNode (simplified)
  hdfs:
    image: bde2020/hadoop-namenode:latest
    container_name: av-hdfs
    ports:
      - "9870:9870"
      - "8020:8020"
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    volumes:
      - hdfs-storage:/hadoop/dfs/name
    networks:
      - av-network

  # Flink JobManager
  flink-jobmanager:
    image: flink:latest
    container_name: av-flink-jobmanager
    ports:
      - "8082:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    networks:
      - av-network

  # Redis (already working)
  redis:
    image: redis:7-alpine
    container_name: av-redis-optimized
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - av-network

volumes:
  grafana-storage:
  mlflow-storage:
  hdfs-storage:
  redis-data:

networks:
  av-network:
    driver: bridge
